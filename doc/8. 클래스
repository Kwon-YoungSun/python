8. 클래스
8-1. 클래스의 기본
    8-1-1. 객체
        참고 ] 추상화
            프로그램에서 필요한 요소만을 사용해서 객체를 표현하는 것
            복잡한 자료, 모듈, 시스템 등으로부터 핵심적인 개념 또는 기능을 간추려 내는 것

        객체란? 여러 가지 속성을 가질 수 있는 대상

        클래스란? 객체를 조금 더 효율적으로 생성하기 위해서 만들어진 구문
                객체가 붕어빵이라면 클래스는 붕어빵 틀에 비유할 수 있다

    8-1-2. 클래스 선언하기
        형식 ]
            class 클래스 이름:
                클래스 내용

        참고 ] 클래스는 캐멀케이스로 짓는 것이 좋다.
            예 ] BeautifulSoup()

        * 클래스를 이용한 객체 생성 방법
            인스턴스 이름(변수 이름) = 클래스 이름() ===> 생성자 함수라고 부른다.

            예 ]
                class Student:
                    pass

                student = Student()

                참고 ] 자바에서의 객체생성
                    Student s = new Student();

    8-1-3. 생성자
        - 클래스 이름과 같은 함수
        - 클래스 이름에 __init__라는 함수를 만들면 객체를 생성할 때 처리할 내용을 작성할 수 있다.

        class 클래스 이름:
            def __init__(self, 추가적인 매개변수):
                pass

        - 이 때 클래스 내부의 함수는 첫 번째 매개변수로 반드시 self를 입력해야 한다.
        - 이 때 self는 '자기 자신'을 나타내는 딕셔너리라고 생각하면 됨
        - 다만 self가 가지고 있는 속성과 기능에 접근할 때는 self.<식별자> 형태로 접근함

        참고 ] 소멸자(destructor)
            생성자와 반대로 인스턴스가 소멸될 때 호출되는 함수
            많이 사용되는 기능은 아니지만, 그래도 알아두자.
            예 ]
                class Test:
                    def __init__(self, name):
                        self.name = name
                        print("{} - 생성되었습니다".format(self.name))
                    def __del__(self):
                        print("{} - 파괴되었습니다".format(self.name))

                test = Test("A")
                print("프로그램이 종료됩니다.")

                ====> 실행 결과 ] Test("A")가 실행될 때 생성자가 호출되고, 프로그램이 종료될 때 소멸자가 호출됨
                    A - 생성되었습니다
                    프로그램이 종료됩니다.
                    A - 파괴되었습니다
    
    8-1-4. 메소드
        클래스가 가지고 있는 함수를 메소드라고 부른다.

        클래스 내부에 메소드를 만들 때 ]
            class 클래스 이름:
                def 메소드 이름(self, 추가적인 매개변수):
                    pass